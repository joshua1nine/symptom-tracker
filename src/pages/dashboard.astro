---
import { db } from '../../db'
import { checkIn } from '../../db/schema'
import OnsetTimeBadge from '../components/OnsetTimeBadge.astro'
import SleepBadge from '../components/SleepBadge.astro'
import SymtomBadge from '../components/SymtomBadge.astro'
import WaterBadge from '../components/WaterBadge.astro'
import BleedingBadge from '../components/BleedingBadge.astro'
import Layout from '../layouts/Layout.astro'
import { format } from 'date-fns'
import StressBadge from '../components/StressBadge.astro'
import Notes from '../components/Notes.astro'

const healthChecks = await db.select().from(checkIn)
console.log(healthChecks[0].foods)
console.log(healthChecks[0].foods?.split(','))
---

<Layout title="Welcome to Symptom Tracker">
	<main class="p-4">
		<header class="mb-4 flex items-center gap-4">
			<a class="block" href="/">Back</a>
			<h1 class="text-4xl font-bold">Dashboard</h1>
		</header>
		<div class="flex flex-wrap justify-center gap-4">
			{
				healthChecks.map((hc) => (
					<div
						class="max-w-96 flex-1 space-y-3 rounded-xl border border-gray-100 bg-gray-50 p-2 shadow"
						id={hc.id.toString()}
					>
						<h2 class="text-lg font-bold">{format(hc.createdAt, 'MMM do YYY')}</h2>
						<ul class="space-y-2">
							{hc.jointPain ? <SymtomBadge label="Joint Pain" data={hc.jointPain} /> : null}
							{hc.hemiplegia ? <SymtomBadge label="Hemiplegia" data={hc.hemiplegia} /> : null}
							{hc.fatigue ? <SymtomBadge label="Fatigue" data={hc.fatigue} /> : null}
							{hc.lightSensitivity ? (
								<SymtomBadge label="Light Sensitivity" data={hc.lightSensitivity} />
							) : null}
							{hc.numbnessTingling ? (
								<SymtomBadge label="Numbness Tingling" data={hc.numbnessTingling} />
							) : null}
							{hc.brainFog ? <SymtomBadge label="Brain Fog" data={hc.brainFog} /> : null}
							{hc.facialPain ? <SymtomBadge label="Facial Pain" data={hc.facialPain} /> : null}
							{hc.muscleSpasms ? (
								<SymtomBadge label="Muscle Spasms" data={hc.muscleSpasms} />
							) : null}
							{hc.onsetTime ? <OnsetTimeBadge label="Onset Time" data={hc.onsetTime} /> : null}
							<SleepBadge label="Sleep" data={hc.sleep} />
							<WaterBadge label="Water" data={hc.water} />
							{hc.bleeding ? <BleedingBadge label="Bleeding" data={hc.bleeding} /> : null}
							<StressBadge label="Stress" data={hc.emotionalStress} />
							{hc.foods ? (
								<li>
									<p class="mb-2">Foods:</p>
									<div class="flex flex-wrap gap-1">
										{hc.foods.split(',').map((food) => (
											<span class="rounded-full bg-gray-200 px-2 py-1 text-sm font-bold text-gray-800">
												{food}
											</span>
										))}
									</div>
								</li>
							) : null}
							{hc.notes ? <Notes label="Notes" data={hc.notes} /> : null}
						</ul>
					</div>
				))
			}
		</div>
	</main>
</Layout>
